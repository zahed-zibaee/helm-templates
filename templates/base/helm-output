---
# Source: package bo/templates/network-policy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: stateful-test-app
  namespace: staging
  labels:
    two72/app-name: stateful-test-app
    two72/app-instance: stateful-test-app
    two72/app-type: microservice
    two72/app-environment: staging
    label-example1: label-value1
    label-example2: label-value2
  annotations:
    creator: Two72DevOpsTeam
    annotations-example1: annotations-value1
    annotations-example2: annotations-value2
spec:
  policyTypes:
    - Ingress
    - Egress
  podSelector:
    matchLabels:
      two72/app-name: stateful-test-app
      two72/app-instance: stateful-test-app
      two72/app-type: microservice
      two72/app-environment: staging
  ingress:
    - from:
          - namespaceSelector: 
              matchLabels:
                a: b
          - namespaceSelector: 
              matchLabels:
                x: true
          - podSelector: 
              matchLabels:
                x: true
      ports:
        - protocol: TCP
          port: 443

  egress:
    - to:
        - namespaceSelector: 
              matchLabels:
                kubernetes.io/metadata.name: snappsupply-staging
        - namespaceSelector: 
              matchLabels:
                snappcloud.io/team: snappcloud
        - podSelector: 
            matchLabels:
              x: true
        - ipBlock:
            cidr: 1.1.1.1/32
            except:
              - 2.2.2.2/32
              - 3.3.3.3/32
        - ipBlock:
            cidr: 1.1.1.1/32
            except:
              - 2.2.2.2/32
              - 3.3.3.3/32
      ports:
        - protocol: TCP
          port: 443
---
# Source: package bo/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stateful-test-app-sa
  namespace: staging
  labels:
    router: 
    two72/app-name: stateful-test-app
    two72/app-instance: stateful-test-app
    two72/app-type: microservice
    two72/app-environment: staging
    label-example1: label-value1
    label-example2: label-value2
  annotations:
    creator: Two72DevOpsTeam
    annotations-example1: annotations-value1
    annotations-example2: annotations-value2
---
# Source: package bo/templates/configmap-envs.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: stateful-test-app-env-cm
  namespace: staging
  labels:
    two72/app-name: stateful-test-app
    two72/app-instance: stateful-test-app
    two72/app-type: microservice
    two72/app-environment: staging
    label-example1: label-value1
    label-example2: label-value2
  annotations:
    creator: Two72DevOpsTeam
    annotations-example1: annotations-value1
    annotations-example2: annotations-value2
data:
  key1: "value1"
  key2: "value2"
---
# Source: package bo/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: stateful-test-app-configname1-cm
  namespace: staging
  labels:
    two72/app-name: stateful-test-app
    two72/app-instance: stateful-test-app
    two72/app-type: microservice
    two72/app-environment: staging
    label-example1: label-value1
    label-example2: label-value2
  annotations:
    creator: Two72DevOpsTeam
    annotations-example1: annotations-value1
    annotations-example2: annotations-value2
data:
  myfile.txt: |
   configvalue1
   configvalue2
  myfile2.txt: |
   configvalue12
   configvalue22
---
# Source: package bo/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: stateful-test-app-configname3-cm
  namespace: staging
  labels:
    two72/app-name: stateful-test-app
    two72/app-instance: stateful-test-app
    two72/app-type: microservice
    two72/app-environment: staging
    label-example1: label-value1
    label-example2: label-value2
  annotations:
    creator: Two72DevOpsTeam
    annotations-example1: annotations-value1
    annotations-example2: annotations-value2
data:
  myfile5.txt: |
   configvalue5
   configvalue2
---
# Source: package bo/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: stateful-test-app-data-pvc
  namespace: staging
  labels:
    two72/app-name: stateful-test-app
    two72/app-instance: stateful-test-app
    two72/app-type: microservice
    two72/app-environment: staging
    label-example1: label-value1
    label-example2: label-value2
  annotations:
    creator: Two72DevOpsTeam
    annotations-example1: annotations-value1
    annotations-example2: annotations-value2
spec:
  storageClassName: ceph-rbd
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
---
# Source: package bo/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: stateful-test-app-data2-pvc
  namespace: staging
  labels:
    two72/app-name: stateful-test-app
    two72/app-instance: stateful-test-app
    two72/app-type: microservice
    two72/app-environment: staging
    label-example1: label-value1
    label-example2: label-value2
  annotations:
    creator: Two72DevOpsTeam
    annotations-example1: annotations-value1
    annotations-example2: annotations-value2
spec:
  storageClassName: ceph-rbd
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
---
# Source: package bo/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: service-headless1
spec:
  clusterIP: None
  selector:
    two72/app-name: stateful-test-app
    two72/app-instance: stateful-test-app
    two72/app-type: microservice
    two72/app-environment: staging
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      name: stateful-test-app-service-headless1-service
---
# Source: package bo/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: stateful-test-app
  namespace: staging
  labels:
    two72/app-name: stateful-test-app
    two72/app-instance: stateful-test-app
    two72/app-type: microservice
    two72/app-environment: staging
    label-example1: label-value1
    label-example2: label-value2
  annotations:
    creator: Two72DevOpsTeam
    annotations-example1: annotations-value1
    annotations-example2: annotations-value2
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: stateful-test-app-service-example1-service
    - port: 8443
      targetPort: 8443
      protocol: TCP
      name: stateful-test-app-service-example2-service
  selector:
    two72/app-name: stateful-test-app
    two72/app-instance: stateful-test-app
    two72/app-type: microservice
    two72/app-environment: staging
---
# Source: package bo/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: stateful-test-app-load-balancer-inter-dc
  namespace: staging
  labels:
    two72/app-name: stateful-test-app
    two72/app-instance: stateful-test-app
    two72/app-type: microservice
    two72/app-environment: staging
    label-example1: label-value1
    label-example2: label-value2
  annotations:
    creator: Two72DevOpsTeam
    annotations-example1: annotations-value1
    annotations-example2: annotations-value2
spec:
  type: LoadBalancer
  ports:
    - port: 8443
      targetPort: 8443
      protocol: TCP
      name: stateful-test-app-service-example2-service
  selector:
    two72/app-name: stateful-test-app
    two72/app-instance: stateful-test-app
    two72/app-type: microservice
    two72/app-environment: staging
---
# Source: package bo/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stateful-test-app
  namespace: staging
  labels:
    two72/app-name: stateful-test-app
    two72/app-instance: stateful-test-app
    two72/app-type: microservice
    two72/app-environment: staging
    label-example1: label-value1
    label-example2: label-value2
  annotations:
    creator: Two72DevOpsTeam
    annotations-example1: annotations-value1
    annotations-example2: annotations-value2
spec:
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      two72/app-name: stateful-test-app
      two72/app-instance: stateful-test-app
      two72/app-type: microservice
      two72/app-environment: staging
  template: 
    metadata:
      annotations:
        creator: Two72DevOpsTeam
        annotations-example1: annotations-value1
        annotations-example2: annotations-value2
        checksum/envVars: 6b6d70adbd0b8a32e750372e978994c7ad792613f901a868fd0f976d9c04eac6
        checksum/configMap: 0bdb447ca07224e1ab4c5ca27dc79da31777509ccc6bae6bd401e70293cdfb4c
      labels:
        two72/app-name: stateful-test-app
        two72/app-instance: stateful-test-app
        two72/app-type: microservice
        two72/app-environment: staging
        label-example1: label-value1
        label-example2: label-value2
    spec:
      terminationGracePeriodSeconds: 60
      imagePullSecrets:
        - name: regsecret
      serviceAccountName: stateful-test-app-sa
      containers:
        - name: helper-container
          image: myreg.com/helper-container:v1.3.0
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 50m
              memory: 100Mi
          envFrom:
            - configMapRef:
                name: stateful-test-app-env-cm
          volumeMounts:
            - name: stateful-test-app-data-claim
              subPath: tmp
              mountPath: /var/atlassian/application-data/jira
              readOnly: true
            - name: stateful-test-app-data-claim
              subPath: org
              mountPath: /weird/path
              readOnly: true
            - name: stateful-test-app-data-claim
              mountPath: /opt/data
              readOnly: true
            - name: stateful-test-app-data2-claim
              subPath: tmp
              mountPath: /var/atlassian/application-data/jira
              readOnly: true
            - name: stateful-test-app-data2-claim
              subPath: org
              mountPath: /weird/path
              readOnly: true
            - name: stateful-test-app-data2-claim
              mountPath: /opt/data
              readOnly: true
            - name: stateful-test-app-emptystorage-1-emptydir
              mountPath: /path/to/dir/5
            - name: stateful-test-app-configname1-cm-claim
              mountPath: /path/to/dir/12
              readOnly: true
            - name: stateful-test-app-configname3-cm-claim
              mountPath: /path/to/dir/14
              readOnly: true
        - name: stateful-test-app
          image: "nginxinc/nginx-unprivileged:stable-alpine"
          imagePullPolicy: Always
          command:
            - "/docker-entrypoint.sh"
          args:
            - "nginx"
            - "-g"
            - "daemon off;"
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          envFrom:
            - configMapRef:
                name: stateful-test-app-env-cm
          resources:
            limits:
              cpu: 500m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 200Mi
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          lifecycle:
            postStart:
              exec:
                command:
                  
                  - ls
                  - -lh
            postStart:
              exec:
                command:
                  
                  - ls
                  - -ltrh
          volumeMounts:
            - name: stateful-test-app-data-claim
              subPath: tmp
              mountPath: /var/atlassian/application-data/jira
              readOnly: true
            - name: stateful-test-app-data-claim
              subPath: org
              mountPath: /weird/path
              readOnly: true
            - name: stateful-test-app-data-claim
              mountPath: /opt/data
              readOnly: true
            - name: stateful-test-app-data2-claim
              subPath: tmp
              mountPath: /var/atlassian/application-data/jira
              readOnly: true
            - name: stateful-test-app-data2-claim
              subPath: org
              mountPath: /weird/path
              readOnly: true
            - name: stateful-test-app-data2-claim
              mountPath: /opt/data
              readOnly: true
            - name: stateful-test-app-emptystorage-1-emptydir
              mountPath: /path/to/dir/5
            - name: stateful-test-app-configname1-cm-claim
              mountPath: /path/to/dir/12
              readOnly: true
            - name: stateful-test-app-configname3-cm-claim
              mountPath: /path/to/dir/14
              readOnly: true
      volumes:
        - name: stateful-test-app-data-claim
          persistentVolumeClaim:
            claimName: stateful-test-app-data-pvc
            readOnly: true
        - name: stateful-test-app-data2-claim
          persistentVolumeClaim:
            claimName: stateful-test-app-data2-pvc
            readOnly: true
        - name: stateful-test-app-emptystorage-1-emptydir
          emptyDir:
            sizeLimit: 100Mi
        - name: stateful-test-app-configname1-cm-claim
          configMap:
            name: stateful-test-app-configname1-cm
        - name: stateful-test-app-configname3-cm-claim
          configMap:
            name: stateful-test-app-configname3-cm
---
# Source: package bo/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: stateful-test-app-hpa
  namespace: staging
  labels:
    two72/app-name: stateful-test-app
    two72/app-instance: stateful-test-app
    two72/app-type: microservice
    two72/app-environment: staging
    label-example1: label-value1
    label-example2: label-value2
  annotations:
    creator: Two72DevOpsTeam
    annotations-example1: annotations-value1
    annotations-example2: annotations-value2
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: stateful-test-app
  minReplicas: 1
  maxReplicas: 2
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
---
# Source: package bo/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: stateful-test-app-cron1-cronjob
spec:
  schedule: 30 2 * * *
  concurrencyPolicy: Forbid
  timeZone: Asia/Tehran
  jobTemplate:
    spec:
      activeDeadlineSeconds: 120
      template:
        spec:
          containers:
          - name: stateful-test-app
            image: reg.snapp.supply/foo:latest
            command:
              - "/bin/sh"
              - "-c"
            args:
              - "/bin/sh"
              - "-c"
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
          restartPolicy: Never
---
# Source: package bo/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: stateful-test-app-cron2-cronjob
spec:
  schedule: 30 * * * *
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      activeDeadlineSeconds: 5600
      template:
        spec:
          containers:
          - name: stateful-test-app
            image: reg.snapp.supply/bar:latest
            command:
              - "/bin/sh"
              - "-c"
            args:
              - "/bin/sh"
              - "-c"
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
          restartPolicy: Never
---
# Source: package bo/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stateful-test-app-myingress1-ingress
  namespace: staging
  labels:
    router: private
    two72/app-name: stateful-test-app
    two72/app-instance: stateful-test-app
    two72/app-type: microservice
    two72/app-environment: staging
    label-example1: label-value1
    label-example2: label-value2
  annotations:
    route.openshift.io/termination: edge
    haproxy.router.openshift.io/timeout: 60s
    creator: Two72DevOpsTeam
    annotations-example1: annotations-value1
    annotations-example2: annotations-value2
spec:
  tls:
    - hosts:
        - "https-example.foo.com"
      secretName: testsecret-tls
  rules:
    - host: "chart-example.local"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name:  stateful-test-app
                port:
                  number: 8080
